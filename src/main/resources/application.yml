server:
  port: ${port:8080}

spring:
  main:
    banner-mode: "off"
  application:
    name: ${name:demo}
  profiles:
    active: ${profiles_active:local}
  data:
    mongodb:
      uri: ${database_mongodb_uri:mongodb://root:password@localhost:27017/demo?authSource=admin&maxIdleTimeMS=15000}
  cloud:
    stream:
      bindings:
        subscribeUserCreationRequested:
          destination: x-user-creation-requested
          group: q-demo-user-creation-requested
          consumer:
            maxAttempts: 1
        subscribeUserUpdateRequested:
          destination: x-user-update-requested
          group: q-demo-user-update-requested
          consumer:
            maxAttempts: 1
        subscribeUserDeletionRequested:
          destination: x-user-deletion-requested
          group: q-demo-user-deletion-requested
          consumer:
            maxAttempts: 1

        publishUserCreated:
          destination: x-user-created
        publishUserDeleted:
          destination: x-user-deleted
        publishUserUpdate:
          destination: x-user-update
        publishUserOperationError:
          destination: x-user-operation-error

      rabbit:
        bindings:
          subscribeUserCreationRequested:
            consumer:
              ttl: ${rabbitmq_ttlInMilliseconds:3600000}
              autoBindDlq: true
              republishToDlq: true
              requeueRejected: false
              deadLetterExchange: x-user-operation-error
              deadLetterExchangeType: fanout
              dlqExpires: ${rabbitmq_dlqExpires:1000}
              prefetch: ${rabbitmq_prefetch:1}
              exchangeType: fanout
              queueNameGroupOnly: true

          subscribeUserUpdateRequested:
            consumer:
              ttl: ${rabbitmq_ttlInMilliseconds:3600000}
              autoBindDlq: true
              republishToDlq: true
              requeueRejected: false
              deadLetterExchange: x-user-operation-error
              deadLetterExchangeType: fanout
              dlqExpires: ${rabbitmq_dlqExpires:1000}
              prefetch: ${rabbitmq_prefetch:1}
              exchangeType: fanout
              queueNameGroupOnly: true

          subscribeUserDeletionRequested:
            consumer:
              ttl: ${rabbitmq_ttlInMilliseconds:3600000}
              autoBindDlq: true
              republishToDlq: true
              requeueRejected: false
              deadLetterExchange: x-user-operation-error
              deadLetterExchangeType: fanout
              dlqExpires: ${rabbitmq_dlqExpires:1000}
              prefetch: ${rabbitmq_prefetch:1}
              exchangeType: fanout
              queueNameGroupOnly: true

          publishUserCreated:
            producer:
              exchangeType: fanout

          publishUserDeleted:
            producer:
              exchangeType: fanout

          publishUserUpdate:
            producer:
              exchangeType: fanout

          publishUserOperationError:
            producer:
              exchangeType: fanout

      binders:
        rabbitmq:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: ${rabbit_host:localhost}
                port: ${rabbit_port:5672}
                username: ${rabbit_username:guest}
                password: ${rabbit_password:guest}
                virtual-host: /

  rabbitmq:
    addresses: ${rabbit_addresses:localhost:5672}
    username: ${rabbit_username:guest}
    password: ${rabbit_password:guest}
    virtual-host: ${rabbit_virtualhost:/}

management:
  endpoint:
    health:
      show-details: "ALWAYS"

app:
  repository:
    maximumLimit: ${app_repository_maximumLimit:100}
    defaultLimit: ${app_repository_defaultLimit:10}

info:
  build:
    groupId: '@project.groupId@'
    artifactId: '@project.artifactId@'
    version: '@project.version@'
    date: '@timestamp@'